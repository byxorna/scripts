#!/usr/bin/env tumblr_ruby
# Stands for collins-ssh-root
# Fetch root credentials from collins for a given server
# then log into it via ssh (without requiring keys to be set up)

require 'collins_auth'
require 'yaml'

@hostname = ARGV.shift
@timeout = 10

abort "Give me a hostname to connect to" unless @hostname

begin
  collins = Collins::Authenticator.setup_client
rescue => e
  abort "Unable to set up collins client! #{e.message}"
end

begin
  assets = collins.find(:hostname => @hostname, :details => true)
rescue => e
  abort "Error querying collins! #{e.message}"
end

abort "More than 1 node found like #{@hostname} (found #{assets.length}). Please be more specific...\n#{assets.map {|a| a.hostname}.join "\n"}\n" if assets.length > 1
abort "No assets found matching #{@hostname}" if assets.empty?

node = assets.first
puts "Connecting to #{node.hostname} as root..."

# set the password in the env instead of letting it sit on the command line
ENV['SYSTEM_P'] = node.system_password
ENV['SYSTEM_H'] = node.hostname

exec <<_EXPECT_
/usr/bin/expect -c '
spawn -noecho /usr/bin/ssh -t -oUserKnownHostsFile=/dev/null -lroot "$env(SYSTEM_H)"
expect {
  "Are you sure you want to continue connecting (yes/no)?" {
    send "yes\\r"
    expect {
      "s password:" { send "$env(SYSTEM_P)\\r" }
      default { exit 1 }
    }
  }
  default {
    exit 1
  }
}
interact
'
_EXPECT_

